딕셔너리
딕셔너리를 말 그대로 해석하면 사전입니다.
관련된 정보를 서로 연관시켜 놓은 것입니다.
키(key)와 값(value)의 쌍으로 이루어져 있습니다.
리스트는 값에 접근하기 위해 인덱스를 사용하지만 딕셔너리는 키를 사용합니다.
{}와 ,를 사용해서 딕셔너리를 표현하고 :으로 키와 값을 묶습니다.
딕셔너리의 키는 변경할 수 없는 값(immutable)만 가능하고 값은 어떤 자료형이든 가능합니다.
 

값 추가하기
키를 사용해 값을 추가할 수 있습니다.
[]에 키를 넣고 값을 할당합니다.


값 접근하기, 제거하기
리스트에서 인덱스로 값을 가져왔던 것처럼 키를 사용해 값을 가져옵니다.
키와 값을 지울 때는 del 키워드를 사용합니다.
 

딕셔너리 메소드
.values(): 딕셔너리에서 값만 뽑아 돌려줍니다.
.keys(): 딕셔너리에서 키만 뽑아 돌려줍니다.
.items(): 딕셔너리에서 키와 값 쌍을 뽑아 돌려줍니다.

my_dict1 ={1:'a',2:'b'} # {key:values ,key:values}
my_dict2 ={'a':1,'b':2}
my_dict3 ={1:1,2:2,3:3}
print(my_dict1)
=>
{1: 'a', 2: 'b'}

my_dict = {}
my_dict[1] = 'a'
my_dict['b'] = 2
my_dict['c'] = 'eugene'

print(my_dict)
=>
{1: 'a', 'b': 2, 'c': 'eugene'}

print(type(my_dict))
=>
<class 'dict'>

#values and key method
my_dict5 = {'k1':'v1','k2':'v2,'}
for val in my_dict5.values():
    print(val)
    
    =>v1
      v2,
      
for key in my_dict5.keys():
     print(key)
=>
k1
k2

#items (key and values both)
for key,val in my_dict.items():
    print(key,val)    
    => 1 a
       b 2
       c eugene
