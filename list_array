시퀀스 자료형,여러 데이터들의 집합
Int,Float 같은 다양한 데이터 type 포함

colors = ['red','blue','green']

(indexing)
list에 있는 값들은 주소(offset)을 가짐
주소를 사용해 할당된 값을 호출

#Slicing

list의 값들을 잘라서 쓰는 것
list의 주소 값을 기반으로 부분 값을 반환

cities = ['Seoul','vancouver','New york','LA','Bangkok','Edmonton','Busan','Sydney']

print(cities[0:6])                    
==>['Seoul', 'vancouver', 'New york', 'LA', 'Bangkok', 'Edmonton']

print(cities[:])                     
==>['Seoul', 'vancouver', 'New york', 'LA', 'Bangkok', 'Edmonton', 'Busan', 'Sydney']

print(cities[-50:50])                 
==>['Seoul', 'vancouver', 'New york', 'LA', 'Bangkok', 'Edmonton', 'Busan', 'Sydney']

print(cities[::2],"AND",cities[::-1])
==>['Seoul', 'New york', 'Bangkok', 'Busan'] AND ['Sydney', 'Busan', 'Edmonton', 'Bangkok', 'LA', 'New york', 'vancouver', 'Seoul']

리스트의 연산
-INDEXING /SLICING /ARITHMETIC OPERATION  활용

color = ['red','blue','green']
color2 = ['orange','black','white']

print(color+color2)
==>['red', 'blue', 'green', 'orange', 'black', 'white']

print(len(color))
==>3

print(color[0])
==>red

color[0] = 'yellow'
print(color[0])
==>yellow

print(color*2)
==>['yellow', 'blue', 'green', 'yellow', 'blue', 'green']

print('blue' in color2)
==>False

total_color = color + color2
print(total_color)
==>['yellow', 'blue', 'green', 'orange', 'black', 'white']
